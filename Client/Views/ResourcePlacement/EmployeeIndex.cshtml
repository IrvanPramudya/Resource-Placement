@using System.Net.Http
@{
    ViewData["Title"] = "Employee";
    Layout = "AdminLayout";
}

<!-- Modal -->
<div class="text-center">
    <h1 class="align-content-center" id="judul">List Employee</h1>
</div>
<div class="text-center my-3">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalAddEmployee" data-bs-placement="top" data-bs-custom-class="custom-tooltip" data-bs-title="Add Employee">
        <i class='bx bx-user-plus'></i>
    </button>
</div>

<div class="add-employee">
    <div class="modal" id="modalAddEmployee" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Employee</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="firstName" class="form-label"> First Name</label>
                            <input type="text" class="form-control" id="firstName" placeholder="First Name">
                        </div>
                        <div class="mb-3">
                            <label for="lastName" class="form-label"> Last Name</label>
                            <input type="text" class="form-control" id="lastName" placeholder="Last Name">
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label"> Email</label>
                            <input type="text" class="form-control" id="email" placeholder="Email">
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label"> Phone Number</label>
                            <input type="text" class="form-control" id="phoneNumber" placeholder="Phone Number">
                        </div>
                        <div class="mb-3">
                            <label for="gender" class="col-form-label">Gender:</label>
                            <select class="form-control" id="gender" required>
                                <option selected disabled>Select Gender</option>
                                <option value="0">Female</option>
                                <option value="1">Male</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="skill" class="form-label"> Skill</label>
                            <input type="text" class="form-control" id="skill" placeholder="Skill">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="addEmployee()" class="btn btn-primary d-inline-block" data-bs-dismiss="modal">Add Employee</button>
                    <button type="button" class="btn btn-secondary d-inline-block" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="recent-orders table-responsive">
    <table class="table table-striped table-hover" id="employeeTable">
        <thead class="table-dark">
            <tr>
                <th>No</th>
                <th>NIK</th>
                <th>Name</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Gender</th>
                <th>Status</th>
                <th>Skill</th>
                <th>Action</th>
            </tr>
        </thead>
    </table>
</div>

<div class="modal" id="modalUpdateEmployee" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" class="form-control" id="guidUpd" value="">
                <input type="hidden" class="form-control" id="nikUpd" value="">
                <div class="mb-3">
                    <label for="firstName" class="form-label"> First Name</label>
                    <input type="text" class="form-control" id="firstNameUpd" placeholder="First Name">
                </div>
                <div class="mb-3">
                    <label for="lastName" class="form-label"> Last Name</label>
                    <input type="text" class="form-control" id="lastNameUpd" placeholder="Last Name">
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label"> Email</label>
                    <input type="text" class="form-control" id="emailUpd" placeholder="Email">
                </div>
                <div class="mb-3">
                    <label for="phone" class="form-label"> Phone Number</label>
                    <input type="tel" class="form-control" id="phoneNumberUpd" placeholder="Phone Number">
                </div>
                <div class="mb-3">
                    <label for="gender" class="col-form-label">Gender:</label>
                    <select class="form-control" id="genderUpd" required>
                        <option value="1">Male</option>
                        <option value="0">Female</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="skill" class="form-label"> Skill</label>
                    <input type="text" class="form-control" id="skillUpd" placeholder="Skill">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="UpdateEmployee()" class="btn btn-primary d-inline-block" data-bs-dismiss="modal">Update Employee</button>
                <button type="button" class="btn btn-secondary d-inline-block" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        const Token = '@Context.Session.GetString("JWToken")'
        $( document ).ajaxComplete(function() {
            $('[data-bs-placement="top"]').tooltip({
                "html": true,
                "delay": {"show": 200, "hide": 0},
            });
            const tooltipTriggerList = document.querySelectorAll('[data-bs-placement="top"]')
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
        });

    </script>

    <script>

        $(document).ready(function () {
            loadEmployeeData();
            var dataTableButtons = $('.dt-button');

            dataTableButtons.removeClass('dt-button');
        });

        function loadEmployeeData() {
            $('#employeeTable').DataTable({
                ajax: {
                    url: "https://localhost:7273/api/employees",
                    dataType: "JSON",
                    dataSrc: "data",
                    headers: {
                        'Authorization': 'Bearer ' + Token
                    }
                },
                columns: [
                    {
                        data: null,
                        render: function (data, type, row, meta) {
                            return meta.row + 1;
                        }
                    },
                    { data: "nik" },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return row.firstName + " " + row.lastName;
                        }
                    },
                    { data: "email" },
                    { data: "phoneNumber" },
                    {
                        data: "gender",
                        render: function (data, type, row) {
                            return data === 1 ? `<box-icon name='male' color='blue' size='md' class='mx-auto'><span></span></box-icon>` : `<span><box-icon name='female' size='md' color='#F61491'></box-icon></span>`;
                        }
                    },
                    {
                        data: "status",
                        render: function (data, type, row) {
                            return data === 1 ? `<span class="badge rounded-pill bg-success fs-6">Site</span>` : `<span class="badge rounded-pill bg-primary fs-6" > Idle </span>`;
                        }
                    },
                    { data: "skill" },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `<button onclick="ShowUpdateEmployee('${row.guid}')" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#modalUpdateEmployee" data-bs-placement="top" title="Update Data"><i class='bx bx-edit'></i></button>` +
                                `   <button onclick="deleteEmployee('${row.guid}')" class="btn btn-danger" data-bs-toggle="modal" data-bs-placement="top" title="Delete Data"><i class='bx bxs-trash-alt'></i></button>`;
                        }
                    }
                ],
                "dom":
                    "<'row'<'col-md-8'B><'col-md-4'f>>" +
                    "<'row'<'col-md-12'tr>>" + // Tabel
                    "<'row'<'col-md-5'i><'col-md-3 mt-2 mx-auto'l><'col-md-4 mt-0'p>>",
                "buttons": [
                    {
                        extend: 'copy',
                        text: '<i class="bx bxs-copy"></i>',
                        className: 'btn btn-primary',
                        titleAttr: 'Copy Table'
                    },
                    {
                        extend: 'csv',
                        text: '<i class="bx bxs-file-export"></i>',
                        className: 'btn btn-success',
                        titleAttr: 'Import to CSV'
                    },
                    {
                        extend: 'excel',
                        text: '<i class="bx bx-file-blank"></i>',
                        className: 'btn btn-warning',
                        titleAttr: 'Import to Excel'
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="bx bxs-file-pdf"></i>',
                        className: 'btn btn-dark',
                        titleAttr: 'Import to PDF'
                    },
                    {
                        extend: 'print',
                        text: '<i class="bx bx-printer"></i>',
                        className: 'btn btn-secondary',
                        titleAttr: 'Print Table'
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="bx bx-show-alt"></i>', // Ganti teks dengan ikon Boxicons
                        className: 'btn btn-custom-column-vis btn-outline-info',
                        titleAttr: 'Column Visibility'
                    },
                ],
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                "pageLength": 25
            });
        }

        function addEmployee() {
            var employeeData = {
                firstName: $("#firstName").val(),
                lastName: $("#lastName").val(),
                email: $("#email").val(),
                phoneNumber: $("#phoneNumber").val(),
                gender: parseInt($("#gender").val()),
                skill: $("#skill").val()
            };

                $.ajax({
                    url: "https://localhost:7273/api/employees",
                    type: "POST",
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + Token
                    },
                    data: JSON.stringify(employeeData),
                }).done(function (result) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Data has been successfully inserted',
                        icon: 'success'
                    }).then(function () {
                        location.reload();
                    });
                }).fail(function (error) {
                    Swal.fire({
                        title: 'Oops',
                        text: 'Failed to insert data. Please try again.',
                        icon: 'error'
                    });
                    console.log(error)
                });
            }

        function deleteEmployee(guid) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Changes cannot be reverted!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Delete Data'
            }).then(function (result) {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "https://localhost:7273/api/employees?guid=" + guid,
                        type: "DELETE",
                        headers: {
                            'Authorization': 'Bearer ' + Token
                        }
                    }).done(function (result) {
                        Swal.fire({
                            title: 'Deleted',
                            text: 'Data has been successfully deleted',
                            icon: 'success'
                        }).then(function () {
                            location.reload();
                        });
                    }).fail(function (error) {
                        alert("Failed to delete data. Please try again!");
                    });
                }
            });
        }
            function ShowUpdateEmployee(guid) {
            $.ajax({
                url: "https://localhost:7273/api/employees/" + guid,
                type: "GET",
                dataType: "json",
                headers: {
                    'Authorization': 'Bearer ' + Token
                }
            }).done((result) => {
                console.log(result)
                $("#guidUpd").val(result.data.guid);
                $("#nikUpd").val(result.data.nik);
                $("#firstNameUpd").val(result.data.firstName);
                $("#lastNameUpd").val(result.data.lastName);
                $("#emailUpd").val(result.data.email);
                $("#phoneNumberUpd").val(result.data.phoneNumber);
                $("#genderUpd").val(result.data.gender);
                $("#skillUpd").val(result.data.skill);
            }).fail((error) => {
                alert("Failed to fetch employee data. Please try again.");
                console.log(error)
            });

        }

        function UpdateEmployee() {

            let data = {
                guid: $("#guidUpd").val(),
                nik: $("#nikUpd").val(),
                firstName: $("#firstNameUpd").val(),
                lastName: $("#lastNameUpd").val(),
                email: $("#emailUpd").val(),
                phoneNumber: $("#phoneNumberUpd").val(),
                gender: parseInt($("#genderUpd").val()),
                skill: $("#skillUpd").val(),
            };
            $.ajax({
                url: "https://localhost:7273/api/employees",
                type: "PUT",
                contentType: "application/json",
                data: JSON.stringify(data),
                headers: {
                    'Authorization': 'Bearer ' + Token
                }
            }).done((result) => {
                    Swal.fire({
                        title: 'Success',
                        text: 'Data has been successfully updated',
                        icon: 'success'
                    }).then(function () {
                    location.reload();
                });
            }).fail((error) => {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Failed to insert data! Please try again.'
                })
                console.log(error)
            })
        }
    </script>
}
@*@section CSS{
    <link rel="stylesheet" href="~/css/EmployeeStyle.css" />
}*@

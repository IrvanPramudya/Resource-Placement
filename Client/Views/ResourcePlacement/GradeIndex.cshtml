@{
    ViewData["Title"] = "Grade";
    Layout = "AdminLayout";
}

<!-- Modal -->
<div class="text-center">
    <h1 class="align-content-center" id="judul">List Grade</h1>
</div>
<div class="text-center my-3">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalAddGrade" data-bs-placement="top" data-bs-custom-class="custom-tooltip" data-bs-title="Add Grade">
        <i class='bx bx-user-plus'></i>
    </button>
</div>

<div class="add-grade">
    <div class="modal" id="modalAddGrade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Grade</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="guid" class="form-label">Employee Name</label>
                            <select class="form-select selectNameinGrade" aria-label="Default select example" id="guidEmployee"></select>
                        </div>
                        <div class="mb-3">
                            <label for="name" class="form-label">Grade</label>
                            <select class="form-select" aria-label="Default select example" id="name">
                                <option selected disabled>Select Grade</option>
                                <option value="A" data-salary="5500000">Grade A</option>
                                <option value="B" data-salary="5000000">Grade B</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="salary" class="form-label">Salary</label>
                            <input type="text" class="form-control" id="salary" placeholder="Salary" readonly>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="addGrade()" class="btn btn-primary d-inline-block" data-bs-dismiss="modal">Add Grade</button>
                    <button type="button" class="btn btn-secondary d-inline-block" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="recent-orders table-responsive">
    <table class="table table-striped table-hover" id="gradeTable">
        <thead class="table-dark">
            <tr>
                <th>No</th>
                <th>Employee Name</th>
                <th>Grade</th>
                <th>Salary</th>
                <th>Action</th>
            </tr>
        </thead>
    <tbody id="tbodyGrade">
    </tbody>
</table>
</div>

<div class="modal" id="modalUpdateGrade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                    <div class="mb-3">
                        <label for="name" class="form-label">Guid</label>
                        <input type="text" class="form-control" id="guidUpd" placeholder="Guid" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="name" class="form-label">Grade</label>
                        <select class="form-select" aria-label="Default select example" id="nameUpd">
                            <option selected>Pilih Grade</option>
                            <option value="A" data-salary-update="5500000">Grade A</option>
                            <option value="B" data-salary-update="5000000">Grade B</option>
                        </select>
                    </div>
                    <div class="mb-3">
                    <label for="salaryUpd" class="form-label">Salary</label>
                        <input type="text" class="form-control" id="salaryUpd" placeholder="Salary" readonly>
                    </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="UpdateGrade()" class="btn btn-primary d-inline-block" data-bs-dismiss="modal">Update Grade</button>
                <button type="button" class="btn btn-secondary d-inline-block" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/js/Grade.js" asp-append-version="true"></script>
        <script>
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="modal"]')
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

            const gradeSelect = document.getElementById('name');
            const salaryInput = document.getElementById('salary');

            gradeSelect.addEventListener('change', function () {
                const selectedOption = gradeSelect.options[gradeSelect.selectedIndex];
                const selectedSalary = selectedOption.getAttribute('data-salary');

                salaryInput.value = selectedSalary;
            });

            $(document).ready(function () {
                $('#nameUpd').change(function () {
                    const selectedSalaryUpdate = $(this).find(':selected').data('salary-update');
                    $('#salaryUpd').val(selectedSalaryUpdate);
                });
            });

            $(document).ready(function () {
                loadGradeData();
            $.ajax({
                url: "https://localhost:7273/api/employees/GetEmployeeOuterJoin"
            }).done(function (result) {
                console.log(result)
                let getName = ""
                $.each(result.data, (key, val) => {
                    console.log(result)
                    getName += ` <option value="${val.guid}">${val.fullName}</option>`
                })
                $('.selectNameinGrade').html(getName)
                $('#guidEmployee').select2({
                    theme: "bootstrap-5",
                    dropdownParent: $('#modalAddGrade')
                });
            })
            });
            function loadGradeData() {
                $('#gradeTable').DataTable({
                    ajax: {
                        url: "https://localhost:7273/api/grades/GetEmployeeName",
                        dataType: "JSON",
                        dataSrc: "data"
                    },
                    columns: [
                        {
                            data: null,
                            render: function (data, type, row, meta) {
                                return meta.row + 1;
                            }
                        },
                        { data: "employeeName" },
                        {
                            data: "grade",
                            render: function (data, type, row) {
                                if (data == "A") {
                                    return `<span class="badge rounded-pill bg-success fs-6"> A </span>`
                                }
                                if (data == "B") {
                                    return `<span class="badge rounded-pill bg-primary fs-6" > B </span>`
                                }
                            }
                        },
                        {
                            data: "salary",
                            render: function (data, type, row) {
                                if (data == 5500000) {
                                    return `<span class="badge rounded-pill bg-success fs-6"> 5.500.000 </span>`
                                }
                                if (data == 5000000) {
                                    return `<span class="badge rounded-pill bg-primary fs-6" > 5.000.000 </span>`
                                }
                            }
                        },
                        {
                            data: null,
                            render: function (data, type, row) {
                            return `<button onclick="ShowUpdateGrade('${row.guid}')" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#modalUpdateGrade" data-bs-placement="top" title="Update Data"><i class='bx bx-edit'></i></button>` +
                                `   <button onclick="deleteGrade('${row.guid}')" class="btn btn-danger" data-bs-toggle="modal" data-bs-placement="top" title="Delete Data"><i class='bx bxs-trash-alt'></i></button>`;
                            }
                        }
                    ],
                "dom":
                    "<'row'<'col-md-8'B><'col-md-4'f>>" + 
                    "<'row'<'col-sm-12'tr>>" + // Tabel
                    "<'row'<'col-md-5'i><'col-md-3 mt-2 mx-auto'l><'col-md-4'p>>",
                "buttons": [
                    {
                        extend: 'copy',
                        text: '<i class="bx bxs-copy"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'csv',
                        text: '<i class="bx bxs-file-export"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'excel',
                        text: '<i class="bx bx-file-blank"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="bx bxs-file-pdf"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'print',
                        text: '<i class="bx bx-printer"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="bx bx-show-alt"></i>', // Ganti teks dengan ikon Boxicons
                        className: 'btn btn-custom-column-vis'
                    }
                ],
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                "pageLength": 25
                });
            }

            function addGrade() {
                var gradeData = {
                    guid: $("#guidEmployee").val(),
                    name: $("#name").val(),
                    salary: $("#salary").val(),
                };

                $.ajax({
                    url: "https://localhost:7273/api/grades",
                    type: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    data: JSON.stringify(gradeData),
                }).done(function (result) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Data has been successfully inserted',
                        icon: 'success'
                    }).then(function () {
                        location.reload();
                    });
                }).fail(function (error) {
                    console.log(error)
                    Swal.fire({
                        title: 'Oops',
                        text: 'Failed to insert data. Please try again.',
                        icon: 'error'
                    });
                });
            }

            function deleteGrade(guid) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'Changes cannot be reverted!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, Delete Data'
                }).then(function (result) {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "https://localhost:7273/api/grades?guid=" + guid,
                            type: "DELETE",
                        }).done(function (result) {
                            Swal.fire({
                                title: 'Deleted',
                                text: 'Data has been successfully deleted',
                                icon: 'success'
                            }).then(function () {
                                location.reload();
                            });
                        }).fail(function (error) {
                            alert("Failed to delete data. Please try again!");
                        });
                    }
                });
            }
            function ShowUpdateGrade(guid) {
                $.ajax({
                    url: "https://localhost:7273/api/grades/" + guid,
                    type: "GET",
                    dataType: "json"
                }).done((result) => {
                    console.log(result)
                    $("#guidUpd").val(result.data.guid);
                    $("#nameUpd").val(result.data.name);
                    $("#salaryUpd").val(result.data.salary);

                    $("#modalemp2").modal("show");
                }).fail((error) => {
                    alert("Failed to fetch grade data. Please try again.");
                    console.log(error)
                });

            }

            function UpdateGrade() {

                let data = {
                    guid: $("#guidUpd").val(),
                    name: $("#nameUpd").val(),
                    salary: $("#salaryUpd").val(),
                };
                $.ajax({
                    url: "https://localhost:7273/api/grades",
                    type: "PUT",
                    contentType: "application/json",
                    data: JSON.stringify(data)
                }).done((result) => {
                    Swal.fire({
                        title: 'Success',
                        text: 'Data has been successfully updated',
                        icon: 'success'
                    }).then(function () {
                        location.reload();
                    });
                }).fail((error) => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Failed to insert data! Please try again.'
                    })
                    console.log(error)
                })
            }
        </script>
}

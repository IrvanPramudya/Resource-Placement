@using System.Net.Http
@{
    ViewData["Title"] = "Dashboard";
    Layout = "AdminLayout";
}

<div class="container-fluid py-4">
    <p class="text-start h1 fw-bold mb-4 mx-auto mt-0">Dashboard</p>
    @if (User.IsInRole("Admin"))
    {
        <ul class="insights" id="Adding-Role"></ul>
    }
    @if (User.IsInRole("Operasional"))
    {
        <div class="row justify-content-center">
            <h3 class="text-center"><span class="badge text-bg-secondary">INTERVIEW</span></h3>
            <div class="col-xl-auto col-sm-4 mb-xl-0 mb-4">
                <div class="card cursor-pointer" style="background-color:#EBECF0" onclick="loadWaitingRespon()">
                    <div class="card-body p-3">
                        <div class="row">
                            <div class="col-12">
                                <div class="numbers">
                                    <p class="text-center text-sm mb-0 text-capitalize font-weight-bold">Waiting Employee Respons</p>
                                    <h5 class="text-center font-weight-bolder mb-0" id="StatusWaiting">
                                    </h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-auto col-sm-4 mb-xl-0 mb-4">
                <div class="card cursor-pointer" style="background-color:#00ffff" onclick="loadEmployeeAccepted()">
                    <div class="card-body p-3">
                        <div class="row">
                            <div class="col-12">
                                <div class="numbers">
                                    <p class="text-center text-sm mb-0 text-capitalize font-weight-bold">Accepted by Employee</p>
                                    <h5 class="text-center font-weight-bolder mb-0" id="StatusAcceptedbyEmployee">
                                    </h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-auto col-sm-4 mb-xl-0 mb-4">
                <div class="card cursor-pointer" style="background-color:#FD5E53" onclick="loadEmployeeRejected()">
                    <div class="card-body p-3">
                        <div class="row">
                            <div class="col-12">
                                <div class="numbers">
                                    <p class="text-center text-sm mb-0 text-capitalize font-weight-bold">Rejected by Employee</p>
                                    <h5 class="text-center font-weight-bolder mb-0" id="StatusRejectedbyEmployee">
                                    </h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-2 col-sm-4 mb-xl-0 mb-4">
                <div class="card cursor-pointer" style="background-color:#98FB98" onclick="loadClientAccepted()">
                    <div class="card-body p-3">
                        <div class="row">
                            <div class="col-12">
                                <div class="numbers">
                                    <p class="text-center text-sm mb-0 text-capitalize font-weight-bold">Accepted by Client</p>
                                    <h5 class="text-center font-weight-bolder mb-0" id="StatusAcceptedbyClient">
                                    </h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-2 col-sm-4 mb-xl-0 mb-4">
                <div class="card cursor-pointer" style="background-color:#FFF700" onclick="loadClientRejected()">
                        <div class="card-body p-3">
                            <div class="row">
                                <div class="col-12">
                                    <div class="numbers">
                                        <p class="text-center text-sm mb-0 text-capitalize font-weight-bold">Rejected by Client</p>
                                        <h5 class="text-center font-weight-bolder mb-0" id="StatusRejectedbyClient">
                                        </h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                </div>
                </div>
            </div>
        <div class="row mt-3 justify-content-center">
            <div class="col-4">
                <div class="row">
                    <h3 class="text-center"><span class="badge text-bg-info my-2">EMPLOYEE</span></h3>
                    <div class="col-md-6">
                        <div class="card cursor-pointer" onclick="loadEmployeeSite()" style="background-color:#EBECF0">
                            <div class="card-header mx-4 p-3 text-center">
                                <div class="icon icon-shape icon-lg bg-gradient-primary shadow text-center border-radius-lg">
                                    <i class="fas fa-landmark opacity-10"></i>
                                </div>
                            </div>
                            <div class="card-body pt-0 p-3 text-center">
                                <h6 class="text-center mb-0">SITE</h6>
                                <hr class="horizontal dark my-3">
                                <h5 class="mb-0" id="countSite"></h5>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mt-md-0 mt-4">
                        <div class="card cursor-pointer" onclick="loadEmployeeIdle()" style="background-color:#EBECF0">
                            <div class="card-header mx-4 p-3 text-center">
                                <span id="inputedInterview"></span>
                                <div class="icon icon-shape icon-lg bg-gradient-primary shadow text-center border-radius-lg">
                                    <i class="fas fa-landmark opacity-10"></i>
                                </div>
                            </div>
                            <div class="card-body pt-0 p-3 text-center">
                                <h6 class="text-center mb-0">IDLE GRADED</h6>
                                <hr class="horizontal dark my-3">
                                <h5 class="mb-0" id="countIdle"></h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-2">
                <div class="row">
                    <h3 class="text-center"><span class="badge text-bg-info my-2">TRAINER</span></h3>
                    <div class="col-md-12">
                        <div class="card cursor-pointer" onclick="loadTrainer()" style="background-color:#EBECF0">
                            <div class="card-header mx-4 p-3 text-center">
                                <div class="icon icon-shape icon-lg bg-gradient-primary shadow text-center border-radius-lg">
                                    <i class="fas fa-landmark opacity-10"></i>
                                </div>
                            </div>
                            <div class="card-body pt-0 p-3 text-center">
                                <h6 class="text-center mb-0">AVAILABLE</h6>
                                <hr class="horizontal dark my-3">
                                <h5 class="mb-0" id="countTrainer"></h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="row">
                    <h3 class="text-center cursor-pointer" data-bs-toggle="modal" data-bs-target="#modalAddClient"><span class="badge text-bg-info my-2">CLIENT</span></h3>
                    <div class="col-md-6">
                        <div class="card cursor-pointer" onclick="loadAvailableClient()" style="background-color:#EBECF0">
                            <div class="card-header mx-4 p-3 text-center">
                                <div class="icon icon-shape icon-lg bg-gradient-primary shadow text-center border-radius-lg">
                                    <i class="fas fa-landmark opacity-10"></i>
                                </div>
                            </div>
                            <div class="card-body pt-0 p-3 text-center">
                                <h6 class="text-center mb-0">AVAILABLE</h6>
                                <hr class="horizontal dark my-3">
                                <h5 class="mb-0" id="countAvailable"></h5>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card cursor-pointer" onclick="loadUnavailableClient()" style="background-color:#EBECF0">
                            <div class="card-header mx-4 p-3 text-center">
                                <div class="icon icon-shape icon-lg bg-gradient-primary shadow text-center border-radius-lg">
                                    <i class="fas fa-landmark opacity-10"></i>
                                </div>
                            </div>
                            <div class="card-body pt-0 p-3 text-center">
                                <h6 class="text-center mb-0">UNAVAILABLE</h6>
                                <hr class="horizontal dark my-3">
                                <h5 class="mb-0" id="countUnAvailable"></h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (User.IsInRole("Admin")||User.IsInRole("Operasional"))
    {
        <div class="bottom-data">
            <div class="row" style="height:30%; width:40%">
                <div class="col-6">
                    <div class="header">
                        <i class='bx bx-receipt'></i>
                        <h3>Gender</h3>
                    </div>
                    <div class="chart-container" style="position: relative; height:100%; width:100%">
                        <canvas id="GenderChart" data-bs-chart-no-animation="true"></canvas>
                    </div>
                </div>
                <div class="col-6">
                    <div class="header">
                        <i class='bx bx-receipt'></i>
                        <h3>Status</h3>
                    </div>
                    <div class="chart-container" style="position: relative; height:100%; width:100%">
                        <canvas id="StatusChart"></canvas>
                    </div>
                </div>
            </div>
            <div class="reminders">
                <div class="header">
                    <i class='bx bx-note'></i>
                    <h3>Placement</h3>
                    <i class='bx bx-filter'></i>
                    <i class='bx bx-plus'></i>
                </div>
                <div class="chart">
                    <canvas id="chart-bar" class="chart-canvas" height="200"></canvas>
                </div>
            </div>
            <div class="reminders">
                <div class="header">
                    <i class='bx bx-note'></i>
                    <h3>Interview</h3>
                    <i class='bx bx-filter'></i>
                    <i class='bx bx-plus'></i>
                </div>
                <div class="chart">
                    <canvas id="chart-line" class="chart-canvas" height="200"></canvas>
                </div>
            </div>

        </div>
    }
    

    @if (User.IsInRole("Employee"))
    {
            <div class="row mt-4">
                <div class="col-lg-7 mb-lg-0 mb-4">
                    <div class="card" style="background-color:#EBECF0">
                        <div class="card-body p-3">
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="d-flex flex-column h-100">
                                        <p class="mb-1 pt-2 text-bold">Resource Placement Application</p>
                                        <h5 class="font-weight-bolder">Welcome Back, @User.FindFirst("Fullname").Value</h5>
                                        <p class="mb-5">Hope You Enjoy Your Day</p>
                                    </div>
                                </div>
                                <div class="col-lg-5 ms-auto text-center mt-5 mt-lg-0">
                                    <div class="border-radius-lg h-100">
                                        @*<img src="~/soft-ui/assets/img/shapes/waves-white.svg" class="position-absolute h-100 w-50 top-0 d-lg-block d-none" alt="waves">*@
                                        <div class="position-relative d-flex align-items-center justify-content-center h-100">
                                            <img class="w-100 position-relative z-index-2 pt-4" src="~/images/metrodata.webp" alt="metrodata">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-5">
                    <div class="card h-100 p-3" style="background-color:#EBECF0">
                        <div class="overflow-hidden position-relative border-radius-lg bg-cover h-100" style="background-image: url('~/soft-ui/assets/img/ivancik.jpg');">
                            <span class="mask bg-gradient-dark"></span>
                            <div class="card-body position-relative z-index-1 d-flex flex-column h-100 p-3">
                                <h5 class="text-white font-weight-bolder mb-4 pt-2">Here is Your Interview Progres</h5>
                                <div id="progressBar">

                                </div>
                                <h3 class="text-light-empasis" id="explainStatus"></h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
    }
    <div class="row mt-2">
        <div class="col-3">
            <div class="card border-light mb-3 text-center" onclick="loadhistory()" style="max-width: 18rem;">
                <div class="card-header">Total Histories Interview</div>
                <div class="card-body">
                    <h3 class="card-text" id="totalHistoryEmployee"></h3>
                </div>
            </div>
        </div>
        <div class="col-9" id="lastInterview"></div>
    </div>
    @if(User.IsInRole("Trainer"))
    {

        <div class="bottom-data">
            <div class="col-4">
                <div class="row">
                    <h3 class="text-center"><span class="badge text-bg-info my-2">EMPLOYEE</span></h3>
                    <div class="col-md-6">
                        <div class="card cursor-pointer" onclick="loadEmployeeGraded()" style="background-color:#EBECF0">
                            <div class="card-header mx-4 p-3 text-center">
                                <div class="icon icon-shape icon-lg bg-gradient-primary shadow text-center border-radius-lg">
                                    <i class="fas fa-landmark opacity-10"></i>
                                </div>
                            </div>
                            <div class="card-body pt-0 p-3 text-center">
                                <h6 class="text-center mb-0">GRADED</h6>
                                <hr class="horizontal dark my-3">
                                <h5 class="mb-0" id="countGraded"></h5>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mt-md-0 mt-4">
                        <div class="card cursor-pointer" onclick="loadEmployeeUngraded()" style="background-color:#EBECF0">
                            <div class="card-header mx-4 p-3 text-center">
                                <span id="inputedInterview"></span>
                                <div class="icon icon-shape icon-lg bg-gradient-primary shadow text-center border-radius-lg">
                                    <i class="fas fa-landmark opacity-10"></i>
                                </div>
                            </div>
                            <div class="card-body pt-0 p-3 text-center">
                                <h6 class="text-center mb-0">UNGRADED</h6>
                                <hr class="horizontal dark my-3">
                                <h5 class="mb-0" id="countUngraded"></h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="header">
                    <i class='bx bx-receipt'></i>
                    <h3>Grade</h3>
                </div>
                <div class="chart-container" style="position: relative; height:100%; width:100%">
                    <canvas id="GradeChart"></canvas>
                </div>
            </div>
        </div>
    }
</div>
<div class="add-account">
    <div class="modal" id="modalAddClient" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Client</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="name" class="form-label"> Name</label>
                            <input type="text" class="form-control" id="name" placeholder="Name">
                        </div>
                        <div class="mb-3">
                            <label for="Email" class="form-label"> Email</label>
                            <input type="email" class="form-control" id="email" placeholder="email">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="addClient()" class="btn btn-primary d-inline-block" data-bs-dismiss="modal">Add Client</button>
                    <button type="button" class="btn btn-secondary d-inline-block" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script src="~/css/progresschart/style.css"></script>
    <script src="~/css/progresschart/stylechart.css"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script type="text/javascript">
        toastr.success('@TempData["Success"]');
    </script>
    <script>
        const Token = '@Context.Session.GetString("JWToken")'
        $.ajax({
            url: "https://localhost:7273/api/employees/GetCountedGender",
            type: "GET",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result) => {
            const ctx = document.getElementById('GenderChart');
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Female', 'Male'],
                    datasets: [{
                        label: 'Gender',
                        data: [result.data.countFemale, result.data.countMale],
                        borderWidth: 0,
                        backgroundColor: [
                            'rgb(255, 99, 132)',
                            'rgb(54, 162, 235)',
                        ],
                        hoverOffset: 4
                    }]
                },
                plugins: [ChartDataLabels],
                options: {
                    plugins: {
                        legend: {
                            display: true
                        },
                        datalabels: {
                            color: 'black',
                            formatter: (value, ctx) => {
                                let dataset = ctx.chart.data.datasets[0];
                                let sum = dataset.data.reduce((a, b) => a + b, 0);
                                let percentage = ((value / sum) * 100).toFixed(2) + "%";

                                if (value > 0) {
                                    return value + " (" + percentage + ")";
                                } else {
                                    return '';
                                }
                            },
                            anchor: 'center',
                            align: 'center',
                            offset: 10, 
                            padding: 0
                        }

                    }
                }
            });
        });

        $.ajax({
            url: "https://localhost:7273/api/employees/GetCountedStatus",
            type: "GET",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result) => {
            const ctx = document.getElementById('StatusChart');
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Idle', 'Site'],
                    datasets: [{
                        label: 'Status',
                        data: [result.data.countIdle, result.data.countSite],
                        borderWidth: 0,
                        backgroundColor: [
                            '#18df7b',
                            '#254636',
                        ],
                        hoverOffset: 4
                    }]
                },
                plugins: [ChartDataLabels],
                options: {
                    plugins: {
                        legend: {
                            display: true
                        },
                        datalabels: {
                            color: 'black',
                            formatter: (value, ctx) => {
                                let dataset = ctx.chart.data.datasets[0];
                                let sum = dataset.data.reduce((a, b) => a + b, 0);
                                let percentage = ((value / sum) * 100).toFixed(2) + "%";

                                if (value > 0) {
                                    return value + " (" + percentage + ")";
                                } else {
                                    return '';
                                }
                            },
                            anchor: 'center',
                            align: 'center',
                            offset: 10,
                            padding: 0
                        }

                    }
                }
            });
        })

        $.ajax({
            url: "https://localhost:7273/api/accountroles/GetCountAllRole",
            type: "GET",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result) => {
            console.log(result.data)
            let role = ""
            $.each(result.data, (key, val) => {
                role += `<li>
                            <i class='bx bx-show-alt'></i>
                            <span class="info">
                                <h3>
                                    ${val.countRole}
                                </h3>
                                <p>${val.roleName}</p>
                            </span>
                        </li>`
            })
            $("#Adding-Role").html(role)
        })

        $.ajax({
            url: "https://localhost:7273/api/interviews/CountEmployeeClientInterview",
            type:"GET",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result)=>{
            const clientName = result.data.map(entry => entry.clientName)
            const countEmployee = result.data.map(entry => entry.countEmployee)
            var ctx2 = document.getElementById("chart-line").getContext("2d");

            var gradientStroke1 = ctx2.createLinearGradient(0, 230, 0, 50);

            gradientStroke1.addColorStop(1, 'rgba(203,12,159,0.2)');
            gradientStroke1.addColorStop(0.2, 'rgba(72,72,176,0.0)');
            gradientStroke1.addColorStop(0, 'rgba(203,12,159,0)'); //purple colors

            var gradientStroke2 = ctx2.createLinearGradient(0, 230, 0, 50);

            gradientStroke2.addColorStop(1, 'rgba(20,23,39,0.2)');
            gradientStroke2.addColorStop(0.2, 'rgba(72,72,176,0.0)');
            gradientStroke2.addColorStop(0, 'rgba(20,23,39,0)'); //purple colors

            new Chart(ctx2, {
                type: "line",
                data: {
                    labels: clientName,
                    datasets: [{
                        label: "Employee",
                        tension: 0.4,
                        borderWidth: 0,
                        pointRadius: 0,
                        borderColor: "#cb0c9f",
                        borderWidth: 3,
                        backgroundColor: gradientStroke1,
                        fill: true,
                        data: countEmployee,
                        maxBarThickness: 6

                    }],
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: true
                        }
                    },
                    interaction: {
                        intersect: false,
                        mode: 'index',
                    },
                    scales: {
                        y: {
                            grid: {
                                drawBorder: false,
                                display: true,
                                drawOnChartArea: true,
                                drawTicks: false,
                                borderDash: [5, 5]
                            },
                            beginAtZero: true,
                            ticks: {
                                display: true,
                                stepSize: 1,
                                padding: 10,
                                color: '#b2b9bf',
                                font: {
                                    size: 11,
                                    family: "Open Sans",
                                    style: 'normal',
                                    lineHeight: 2
                                },
                            }
                        },
                        x: {
                            grid: {
                                drawBorder: false,
                                display: false,
                                drawOnChartArea: false,
                                drawTicks: false,
                                borderDash: [5, 5]
                            },
                            ticks: {
                                display: true,
                                color: '#b2b9bf',
                                padding: 20,
                                font: {
                                    size: 11,
                                    family: "Open Sans",
                                    style: 'normal',
                                    lineHeight: 2
                                },
                            }
                        },
                    },
                },
            });
        })

        $.ajax({
            url: "https://localhost:7273/api/placements/CountClient",
            type: "GET",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result) => {
            const clientName = result.data.map((entry) => entry.clientName);
            const countEmployee = result.data.map((entry) => entry.countEmployee);
            var ctx2 = document.getElementById("chart-bar").getContext("2d");

            var barColors = [
                'rgba(203, 12, 159, 0.6)',
                'rgba(72, 72, 176, 0.6)',
                'rgba(255, 99, 132, 0.6)',
                // Tambahkan warna lain sesuai kebutuhan
            ];

            new Chart(ctx2, {
                type: "bar",
                data: {
                    labels: clientName,
                    datasets: [{
                        label: "Employee",
                        backgroundColor: barColors,
                        data: countEmployee,
                    }],
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: true
                        },
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1, // Atur intervalnya sesuai kebutuhan (1 akan menampilkan angka bulat)
                            }
                        },
                    },
                },
            });
        });


        $.ajax({
            url: "https://localhost:7273/api/interviews/@User.FindFirst("Guid").Value",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result)=>{
            let progressBar = 0
            let statusName = ""
            if(result.data.status == 0)
            {
                statusName = "Waiting Employee Respon"
                progressBar =  25
            }
            if(result.data.status == 1)
            {
                statusName = "Accepted By Employee"
                progressBar =  50
            }
            if(result.data.status == 2)
            {
                statusName = "Rejected By Employee"
                progressBar =  0
            }
            if(result.data.status == 3)
            {
                statusName = "Accepted By Client"
                progressBar =  100
            }
            if(result.data.status == 4)
            {
                statusName = "Rejected By Client"
                progressBar =  0
            }
            $('#progressBar').html(`<div class="progress" role="progressbar" aria-label="Animated striped example" aria-valuenow="${progressBar}" aria-valuemin="0" aria-valuemax="100">
                                                <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: ${progressBar}%"></div>
                                    </div>`)
            $('#explainStatus').html(`${statusName}`)
        })

        $.ajax({
            url: "https://localhost:7273/api/interviews/CountEmployeeStatusinInterview",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result)=>{
            $("#StatusWaiting").html(`${result.data.countStatusWaiting}`)
            $("#StatusAcceptedbyEmployee").html(`${result.data.countStatusAcceptedbyEmployee}`)
            $("#StatusRejectedbyEmployee").html(`${result.data.countStatusRejectedbyEmployee}`)
            $("#StatusAcceptedbyClient").html(`${result.data.countStatusAcceptedbyClient}`)
            $("#StatusRejectedbyClient").html(`${result.data.countStatusRejectedbyClient}`)
        })
        function loadWaitingRespon(){
            location.href = "/Interview/EmployeeWaiting"
        }
        function loadEmployeeAccepted(){
            location.href = "/Interview/EmployeeAccepted"
        }
        function loadEmployeeRejected() {
            location.href = "/Interview/EmployeeRejected"
        }
        function loadClientAccepted() {
            location.href = "/Interview/ClientAccepted"
        }
        function loadClientRejected() {
            location.href = "/Interview/ClientRejected"
        }
        function loadEmployeeSite() {
            location.href = "/Employee/EmployeeSite"
        }
        function loadEmployeeIdle() {
            location.href = "/Employee/EmployeeIdle"
        }
        function loadTrainer() {
            location.href = "/Employee/GetTrainer"
        }
        function loadAvailableClient() {
            location.href = "/Client/AvailableClient"
        }
        function loadUnavailableClient() {
            location.href = "/Client/UnavailableClient"
        }
        function loadEmployeeGraded() {
            location.href = "/Grade/EmployeeGraded"
        }
        function loadEmployeeUngraded() {
            location.href = "/Grade/EmployeeUngraded"
        }
        function loadhistory(){
            location.href = "/history/employeehistory"
        }

        $.ajax({
            url: "https://localhost:7273/api/employees/GetCountedStatus",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result)=>{
            $("#countSite").html(`${result.data.countSite}`)
            $("#countIdle").html(`${result.data.countIdleGraded}`)
        })
        $.ajax({
            url: "https://localhost:7273/api/accountroles/GetCountAllRole",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result)=>{
            $("#countTrainer").html(`${result.data[0].countRole}`)
        })
        $.ajax({
            url: "https://localhost:7273/api/clients/GetCountClient",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
        }).done((result)=>{
            $("#countAvailable").html(`${result.data.countAvailable}`)
            $("#countUnAvailable").html(`${result.data.countUnAvailable}`)
        })

       $.ajax({
           url:"https://localhost:7273/api/grades/CountEmployeeinGrade",
            headers: {
                'Authorization': 'Bearer ' + Token
            }
       }).done((result)=>{
           $("#countGraded").html(`${result.data.countGraded}`)
           $("#countUngraded").html(`${result.data.countUngraded}`)
            const ctx = document.getElementById('GradeChart');
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Graded', 'Ungraded'],
                    datasets: [{
                        label: 'Grade',
                        data: [result.data.countGraded, result.data.countUngraded],
                        borderWidth: 0,
                        backgroundColor: [
                            'rgb(54, 162, 235)',
                            'rgb(255, 99, 132)',
                        ],
                        hoverOffset: 4
                    }]
                },
                plugins: [ChartDataLabels],
                options: {
                    plugins: {
                        legend: {
                            display: true
                        },
                        datalabels: {
                            color: 'black',
                            formatter: (value, ctx) => {
                                let dataset = ctx.chart.data.datasets[0];
                                let sum = dataset.data.reduce((a, b) => a + b, 0);
                                let percentage = ((value / sum) * 100).toFixed(2) + "%";

                                if (value > 0) {
                                    return value + " (" + percentage + ")";
                                } else {
                                    return '';
                                }
                            },
                            anchor: 'end',
                            align: 'start',
                            offset: 10
                        }

                    }
                }
            });
       })
        function addClient() {
            var clientData = {
                name: $("#name").val(),
                email: $("#email").val(),
            };

            $.ajax({
                url: "https://localhost:7273/api/clients",
                type: "POST",
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + Token
                },
                data: JSON.stringify(clientData),
            }).done(function (result) {
                Swal.fire({
                    title: 'Success',
                    text: 'Data has been successfully inserted',
                    icon: 'success'
                }).then(function () {
                    location.reload();
                });
            }).fail(function (error) {
                Swal.fire({
                    title: 'Oops',
                    text: 'Failed to insert data. Please try again.',
                    icon: 'error'
                });
                console.log(error)
            });
        }
        $.ajax({
            url: 'https://localhost:7273/api/histories/CountHistoriesbyEmployeeGuid/@User.FindFirst("Guid").Value',
            headers: {
                'Authorization': 'Bearer ' + Token
            },
        }).done((result)=>{
            $("#totalHistoryEmployee").append(`${result.data.totalHistories}`)
        })
        $.ajax({
            url: 'https://localhost:7273/api/histories/GetLastHistory/@User.FindFirst("Guid").Value',
            headers: {
                'Authorization': 'Bearer ' + Token
            },
        }).done((result)=>{
                $("#lastInterview").append(`
                  <div class="card mb-4">
                    <div class="card-header pb-0">
                      <h6>Last Interview Result</h6>
                    </div>
                    <div class="card-body px-0 pt-0 pb-2">
                      <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0">
                          <thead>
                            <tr>
                              <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Client</th>
                              <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Interview Date</th>
                              <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Status</th>
                              <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">IsAccepted</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td>
                                <div class="d-flex px-2 py-1">
                                  <div class="d-flex flex-column justify-content-center">
                                    <h6 class="mb-0 text-sm">${result.data.clientName}</h6>
                                    <p class="text-xs text-secondary mb-0">${result.data.positionName}</p>
                                  </div>
                                </div>
                              </td>
                              <td>
                                <p class="text-xs font-weight-bold mb-0"> ${moment(result.data.interviewDate).format("dddd")}</p>
                                <p class="text-xs text-secondary mb-0"> ${moment(result.data.interviewDate).format("D MMMM YYYY, HH:mm")}</p>
                              </td>
                              <td class="align-middle text-center text-sm">
                                <span class="badge badge-sm bg-gradient-success">${result.data.status}</span>
                              </td>
                              <td class="align-middle text-center">
                                <span class="text-secondary text-xs font-weight-bold">${result.data.isAccepted}</span>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
            `)
        })
    </script>
}
@section CSS{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
}
@using System.Net.Http
@{
    ViewData["Title"] = "Client";
    Layout = "AdminLayout";
}

<!-- Modal -->
<div class="text-center">
    <h1 class="align-content-center" id="judul">List Client</h1>
</div>
<div class="text-center my-3">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalAddClient" data-bs-placement="top" data-bs-custom-class="custom-tooltip" data-bs-title="Add Client">
        <i class='bx bx-user-plus'></i>
    </button>
</div>

<div class="add-account">
    <div class="modal" id="modalAddClient" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Client</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="name" class="form-label"> Name</label>
                            <input type="text" class="form-control" id="name" placeholder="Name">
                        </div>
                        <div class="mb-3">
                            <label for="Email" class="form-label"> Email</label>
                            <input type="email" class="form-control" id="email" placeholder="email">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="addClient()" class="btn btn-primary d-inline-block" data-bs-dismiss="modal">Add Client</button>
                    <button type="button" class="btn btn-secondary d-inline-block" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="recent-orders table-responsive">
    <table class="table table-striped table-hover" id="clientTable">
        <thead class="table-dark">
            <tr>
                <th>No</th>
                <th>Name</th>
                <th>Email</th>
                <th>Is Available</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="tbodyClient">
        </tbody>
    </table>
</div>

<div class="modal" id="modalUpdateClient" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <input type="hidden" class="form-control" id="guidUpd" placeholder="Name">
                    </div>
                    <div class="mb-3">
                        <label for="name" class="form-label"> Name</label>
                        <input type="text" class="form-control" id="nameUpd" placeholder="Name">
                    </div>
                    <div class="mb-3">
                        <label for="Email" class="form-label"> Email</label>
                        <input type="email" class="form-control" id="emailUpd" placeholder="email">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="UpdateClient()" class="btn btn-primary d-inline-block" data-bs-dismiss="modal">Update Client</button>
                <button type="button" class="btn btn-secondary d-inline-block" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        const Token = '@Context.Session.GetString("JWToken")'
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="modal"]')
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

        $(document).ready(function () {
            loadClientData();
            $.ajax({
                url: "https://localhost:7273/api/clients/GetAvailableClient",
                headers: {
                    'Authorization': 'Bearer ' + Token
                }
            }).done(function (result) {
                // Assuming the API response contains a property named "totalEmployees"
                console.log(result)
                let getName = ""
                $.each(result.data, (key, val) => {
                    console.log(result)
                    getName += ` <option value="${val.accountGuid}">${val.fullName}</option>`
                })
                $('.selectName').html(getName)
            })
            $.ajax({
                url: "https://localhost:7273/api/clients",
                headers: {
                    'Authorization': 'Bearer ' + Token
                }
            }).done(function (result) {
                // Assuming the API response contains a property named "totalEmployees"
                console.log(result)
                let getRole = ""
                $.each(result.data, (key, val) => {
                    console.log(result)
                    getRole += ` <option value="${val.guid}">${val.name}</option>`
                })
                $('.selectRole').html(getRole)
            })
        });

        function loadClientData() {
            $('#clientTable').DataTable({
                ajax: {
                    url: "https://localhost:7273/api/clients/",
                    dataType: "JSON",
                    dataSrc: "data",
                    headers: {
                        'Authorization': 'Bearer ' + Token
                    }
                },
                columns: [
                    {
                        data: null,
                        render: function (data, type, row, meta) {
                            return meta.row + 1;
                        }
                    },
                    { data: "name" },
                    { data: "email" },
                    {
                        data: "isAvailable",
                        render: function (data, type, row) {
                            return data === true ? `<span class="badge rounded-pill bg-success fs-6">True</span>` : `<span class="badge rounded-pill bg-danger fs-6" > False </span>`;
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `<button onclick="ShowUpdateClient('${row.guid}')" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#modalUpdateClient" data-bs-placement="top" title="Update Data"><i class='bx bx-edit'></i></button>` +
                                `   <button onclick="deleteClient('${row.guid}')" class="btn btn-danger" data-bs-toggle="modal" data-bs-placement="top" title="Delete Data"><i class='bx bxs-trash-alt'></i></button>`;
                        }
                    }
                ],
                "dom":
                    "<'row'<'col-md-8'B><'col-md-4'f>>" + 
                    "<'row'<'col-sm-12'tr>>" + // Tabel
                    "<'row'<'col-md-5'i><'col-md-3 mt-2 mx-auto'l><'col-md-4'p>>", 
                "buttons": [
                    {
                        extend: 'copy',
                        text: '<i class="bx bxs-copy"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'csv',
                        text: '<i class="bx bxs-file-export"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'excel',
                        text: '<i class="bx bx-file-blank"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="bx bxs-file-pdf"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'print',
                        text: '<i class="bx bx-printer"></i>',
                        className: 'btn btn-custom'
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="bx bx-show-alt"></i>', // Ganti teks dengan ikon Boxicons
                        className: 'btn btn-custom-column-vis'
                    }
                ],
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                "pageLength": 25
            });
        }

        function addClient() {
            var clientData = {
                name: $("#name").val(),
                email: $("#email").val(),
            };

            $.ajax({
                url: "https://localhost:7273/api/clients",
                type: "POST",
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + Token
                },
                data: JSON.stringify(clientData),
            }).done(function (result) {
                Swal.fire({
                    title: 'Success',
                    text: 'Data has been successfully inserted',
                    icon: 'success'
                }).then(function () {
                    location.reload();
                });
            }).fail(function (error) {
                Swal.fire({
                    title: 'Oops',
                    text: 'Failed to insert data. Please try again.',
                    icon: 'error'
                });
                console.log(error)
            });
        }

        function deleteClient(guid) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Changes cannot be reverted!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Delete Data'
            }).then(function (result) {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "https://localhost:7273/api/clients?guid=" + guid,
                        type: "DELETE",
                        headers: {
                            'Authorization': 'Bearer ' + Token
                        }
                    }).done(function (result) {
                        Swal.fire({
                            title: 'Deleted',
                            text: 'Data has been successfully deleted',
                            icon: 'success'
                        }).then(function () {
                            location.reload();
                        });
                    }).fail(function (error) {
                        alert("Failed to delete data. Please try again!");
                    });
                }
            });
        }
        function ShowUpdateClient(guid) {
            $.ajax({
                url: "https://localhost:7273/api/clients/" + guid,
                type: "GET",
                dataType: "json"
            }).done((result) => {
                console.log(result)
                $("#guidUpd").val(result.data.guid);
                $("#nameUpd").val(result.data.name);
                $("#emailUpd").val(result.data.email);
            }).fail((error) => {
                alert("Failed to fetch client data. Please try again.");
                $("#accountguidUpd").val(result.data.accountGuid);
                $("#roleguidUpd").val(result.data.roleGuid);
            }).fail((error) => {
                alert("Failed to fetch client data. Please try again.");
                console.log(error)
            });

        }

        function UpdateClient() {

            let data = {
                guid: $("#guidUpd").val(),
                name: $("#nameUpd").val(),
                email: $("#emailUpd").val(),
            };
            $.ajax({
                url: "https://localhost:7273/api/clients",
                type: "PUT",
                contentType: "application/json",
                data: JSON.stringify(data)
            }).done((result) => {
                Swal.fire({
                    title: 'Success',
                    text: 'Data has been successfully Updated',
                    icon: 'success'
                }).then(() => {
                    location.reload();
                });
            }).fail((error) => {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Failed to insert data! Please try again.'
                })
                console.log(error)
            })
        }
    </script>
}